--- tvheadend.org/Makefile
+++ tvheadend/Makefile
@@ -36,6 +36,7 @@
 CFLAGS  += -Wmissing-prototypes
 CFLAGS  += -fms-extensions -funsigned-char -fno-strict-aliasing
 CFLAGS  += -D_FILE_OFFSET_BITS=64
+CFLAGS  += -DPLATFORM_X
 CFLAGS  += -I${BUILDDIR} -I${ROOTDIR}/src -I${ROOTDIR}
 ifeq ($(CONFIG_ANDROID),yes)
 LDFLAGS += -ldl -lm
--- tvheadend.org/src/tvheadend.h
+++ tvheadend/src/tvheadend.h
@@ -65,12 +65,12 @@
 
 htsmsg_t *tvheadend_capabilities_list(int check);
 
-typedef struct str_list
+typedef struct strg_list
 {
   int max;
   int num;
   char **str;
-} str_list_t;
+} strg_list_t;
 
 #define PTS_UNSET INT64_C(0x8000000000000000)
 
@@ -790,4 +790,18 @@
 #define PRItime_t       "ld"
 #endif
 
+/* VFD output */
+#if defined(PLATFORM_TF7700)
+#define VFD_DEVICE "/dev/fplarge"
+#else
+#define VFD_DEVICE "/dev/vfd"
+#endif
+#define VFDDISPLAYCHARS 0xc0425a00
+
+struct vfd_ioctl_data {
+  unsigned char start;
+  unsigned char data[64];
+  unsigned char length;
+};
+
 #endif /* TVHEADEND_H */
--- tvheadend.org/src/input/mpegts.c
+++ tvheadend/src/input/mpegts.c
@@ -20,8 +20,8 @@
 #include "mpegts/fastscan.h"
 
 void
-mpegts_init ( int linuxdvb_mask, int nosatip, str_list_t *satip_client,
-              str_list_t *tsfiles, int tstuners )
+mpegts_init ( int linuxdvb_mask, int nosatip, strg_list_t *satip_client,
+              strg_list_t *tsfiles, int tstuners )
 {
   /* Register classes (avoid API 400 errors due to not yet defined) */
   idclass_register(&mpegts_network_class);
--- tvheadend.org/src/input/mpegts.h
+++ tvheadend/src/input/mpegts.h
@@ -70,8 +70,8 @@
  * Setup / Tear down
  * *************************************************************************/
 
-void mpegts_init ( int linuxdvb_mask, int nosatip, str_list_t *satip_client,
-                   str_list_t *tsfiles, int tstuners );
+void mpegts_init ( int linuxdvb_mask, int nosatip, strg_list_t *satip_client,
+                   strg_list_t *tsfiles, int tstuners );
 void mpegts_done ( void );
 
 /* **************************************************************************
--- tvheadend.org/src/input/mpegts/satip/satip.c
+++ tvheadend/src/input/mpegts/satip/satip.c
@@ -745,7 +745,7 @@
 static gtimer_t satip_discovery_static_timer;
 static gtimer_t satip_discovery_timerq;
 static gtimer_t satip_discovery_msearch_timer;
-static str_list_t *satip_static_clients;
+static strg_list_t *satip_static_clients;
 
 static void
 satip_discovery_destroy(satip_discovery_t *d, int unlink)
@@ -1210,7 +1210,7 @@
  * Initialization
  */
 
-void satip_init ( int nosatip, str_list_t *clients )
+void satip_init ( int nosatip, strg_list_t *clients )
 {
   satip_enabled = !nosatip;
   TAILQ_INIT(&satip_discoveries);
--- tvheadend.org/src/input/mpegts/satip/satip.h
+++ tvheadend/src/input/mpegts/satip/satip.h
@@ -22,7 +22,7 @@
 
 void satip_device_discovery_start( void );
 
-void satip_init( int nosatip, str_list_t *clients );
+void satip_init( int nosatip, strg_list_t *clients );
 void satip_done( void );
 
 #endif /* __TVH_SATIP_H__ */
--- tvheadend.org/src/main.c
+++ tvheadend/src/main.c
@@ -80,6 +80,7 @@
 #include <openssl/err.h>
 #include <openssl/rand.h>
 #include <openssl/engine.h>
+#include <stropts.h>
 
 pthread_t main_tid;
 
@@ -597,6 +598,10 @@
   } randseed;
   extern int dvb_bouquets_parse;
 
+ /* for writing to VFD */
+  int file_vfd = -1;
+  struct vfd_ioctl_data vfddata;
+
   main_tid = pthread_self();
 
   /* Setup global mutexes */
@@ -654,8 +659,8 @@
              *opt_bindaddr     = NULL,
              *opt_subscribe    = NULL,
              *opt_user_agent   = NULL;
-  str_list_t  opt_satip_xml    = { .max = 10, .num = 0, .str = calloc(10, sizeof(char*)) };
-  str_list_t  opt_tsfile       = { .max = 10, .num = 0, .str = calloc(10, sizeof(char*)) };
+  strg_list_t  opt_satip_xml    = { .max = 10, .num = 0, .str = calloc(10, sizeof(char*)) };
+  strg_list_t  opt_tsfile       = { .max = 10, .num = 0, .str = calloc(10, sizeof(char*)) };
   cmdline_opt_t cmdline_opts[] = {
     {   0, NULL,        N_("Generic Options"),         OPT_BOOL, NULL         },
     { 'h', "help",      N_("Show this page"),          OPT_BOOL, &opt_help    },
@@ -778,7 +783,7 @@
     else if (opt->type == OPT_INT)
       *((int*)opt->param) = atoi(argv[i]);
     else if (opt->type == OPT_STR_LIST) {
-      str_list_t *strl = opt->param;
+      strg_list_t *strl = opt->param;
       if (strl->num < strl->max)
         strl->str[strl->num++] = argv[i];
     }
@@ -1098,6 +1103,29 @@
          getpid(), getuid(), getgid(), getcwd(buf, sizeof(buf)),
          hts_settings_get_root());
 
+/* Sign on to VFD */
+//#if defined(PLATFORM_OCTAGON1008) || defined(PLATFORM_FORTIS_HDBOX) || defined(PLATFORM_ATEVIO7500) || defined(PLATFORM_SPARK7162) || defined(PLATFORM_TF7700)
+//	char txtstr[] = "Tvheadend";
+//#elif defined(PLATFORM_HS7810A) || defined(PLATFORM_HS7119) || defined(PLATFORM_HS7819) || defined(PLATFORM_SPARK)
+	char txtstr[] = "tvHE";
+//#endif
+//#if !defined(PLATFORM_HS7110) //models without front panel display
+	vfddata.start = 0;
+	vfddata.length = strlen(txtstr);
+	memset(vfddata.data, 0, 64);
+	memcpy(vfddata.data, txtstr, vfddata.length);
+
+	if (file_vfd == -1)
+	{
+		file_vfd = open(VFD_DEVICE, O_WRONLY);
+	}
+	if (file_vfd > -1)
+	{
+		write(file_vfd, vfddata.data, vfddata.length);
+		close(file_vfd);
+		file_vfd = -1;
+	}
+//#endif
   if(opt_abort)
     abort();
 

