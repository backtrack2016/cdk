--- a/charset/fribidi-char-sets.c.orig	2013-06-05 23:47:16.747018237 +0200
+++ b/charset/fribidi-char-sets.c	2013-06-05 23:42:57.563013482 +0200
@@ -114,7 +114,7 @@
 };
 
 #if FRIBIDI_USE_GLIB+0
-# include <glib/gstrfuncs.h>
+# include <glib.h>
 # define fribidi_strcasecmp g_ascii_strcasecmp
 #else /* !FRIBIDI_USE_GLIB */
 static char
--- a/lib/mem.h.orig	2013-06-05 23:50:49.867022148 +0200
+++ b/lib/mem.h	2013-06-05 23:51:08.291022486 +0200
@@ -42,7 +42,7 @@
 #if FRIBIDI_USE_GLIB+0
 
 #ifndef __FRIBIDI_DOC
-# include <glib/gmem.h>
+# include <glib.h>
 #endif /* !__FRIBIDI_DOC */
 
 #define FriBidiMemChunk GMemChunk
--- a/charset/fribidi-char-sets-utf8.c
+++ b/charset/fribidi-char-sets-utf8.c
@@ -65,13 +65,22 @@ fribidi_utf8_to_unicode (
 	  *us++ = ((*s & 0x1f) << 6) + (*(s + 1) & 0x3f);
 	  s += 2;
 	}
-      else			/* 3 byte */
+      else if (ch <= 0xef)	/* 3 byte */
 	{
 	  *us++ =
 	    ((int) (*s & 0x0f) << 12) +
 	    ((*(s + 1) & 0x3f) << 6) + (*(s + 2) & 0x3f);
 	  s += 3;
 	}
+      else                     /* 4 byte */
+      {
+	  *us++ =
+	    ((int) (*s & 0x07) << 18) +
+	    ((*(s + 1) & 0x3f) << 12) +
+	    ((*(s + 2) & 0x3f) << 6) +
+	    ((*(s + 3) & 0x3f) << 0);
+	  s += 4;
+      }
       length++;
     }
   return (length);
--- a/bin/fribidi-main.c
+++ b/bin/fribidi-main.c
@@ -609,7 +609,7 @@ main (
 	    }
 
 	    if (*nl_found)
-	      printf (new_line);
+	      printf ("%s", new_line);
 	  }
       }
     }
