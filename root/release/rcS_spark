#!/bin/sh
#Version 130927.1

MODDIR=/lib/modules

echo "Spark"

insmod $MODDIR/aotom.ko paramDebug=50
insmod $MODDIR/simu_button.ko
if [ -e $MODDIR/encrypt.ko ]; then
   insmod $MODDIR/encrypt.ko
fi

if [ -e /var/etc/.firstboot ]; then
   echo "1MIN" >/dev/vfd
   echo "WAIT 1 min"
   rm /var/etc/.firstboot
   sleep 1
   touch /dev/.devfsd
else
   echo "LD10" >/dev/vfd
   echo "LOAD 10"
fi

/etc/init.d/mountvirtfs start
/etc/init.d/portmap start

insmod $MODDIR/e2_proc.ko

/etc/init.d/autofs start

if [ -e "$MODDIR/cpu_frequ.ko" ]; then
   insmod $MODDIR/cpu_frequ.ko
   cpufreq=`cat /etc/enigma2/settings | grep systemoptions.freq | cut -d "=" -f2`
   case $cpufreq in
      200) overclk=5123;;
      300) overclk=2561;;
      450) overclk=3841;;
      500) overclk=12803;;
      540) overclk=4609;;
      600) overclk=5121;;
      630) overclk=5377;;
      650) overclk=16643;;
      700) overclk=17923;;
      710) overclk=18179;;
      750) overclk=19203;;
      775) overclk=39686;;
      800) overclk=20483;;
      *)   cpufreq=540
           overclk=4609;;
   esac
   echo $overclk > /proc/cpu_frequ/pll0_ndiv_mdiv
   echo "Setting CPU clock speed to $cpufreq MHz (overclk=$overclk)"
fi

echo "Starting DEBUG Interface"
/etc/init.d/mountall start
/etc/init.d/hostname start

echo -n "Starting telnetd "
autologin=`cat /etc/enigma2/settings | grep systemoptions.autologin | cut -d "=" -f2`
if [ ! $autologin ]; then
   /usr/sbin/telnetd -l /bin/autologin
   echo "with autologin"
else
   /usr/sbin/telnetd -l /bin/login
   echo "with normal login"
fi

echo "Init stmfb (LOAD 9)"
echo "LD 9" >/dev/vfd
insmod $MODDIR/stmcore-display-sti7111.ko

if  grep -q "config.av.videoport=Scart" /etc/enigma2/settings; then
   insmod $MODDIR/stmfb.ko display0=720x576i-32@50:15m:pal:rgb:rgb; #SCART
else
   insmod $MODDIR/stmfb.ko display0=1280x720-32@50:15m:pal:yuv:yuv; #HDMI
fi

echo "Loading modules"

if [ ! -e /boot/audio.elf ]; then
   echo "NO AUDIO FW!!!"
   echo "NOFW" > /dev/vfd
fi

echo "Load audio firmware (LOAD 8)"
echo "LD 8" > /dev/vfd
dtsdown=`cat /etc/enigma2/settings | grep systemoptions.dtsdownmix | cut -d "=" -f2`
if [ ! $dtsdown ] && [ -e /boot/audio_dts.elf ]; then
   /bin/ustslave /dev/st231-1 /boot/audio_dts.elf > /dev/null
else
   /bin/ustslave /dev/st231-1 /boot/audio.elf > /dev/null
fi

echo "Load video firmware (LOAD 7)"
echo "LD 7" > /dev/vfd
/bin/ustslave /dev/st231-0 /boot/video.elf > /dev/null

echo "Init embx (LOAD 6)"
echo "LD 6" > /dev/vfd
insmod $MODDIR/embxshell.ko
insmod $MODDIR/embxmailbox.ko mailbox0=0xfe211000:136:set2 mailbox1=0xfe212000:0 ;
insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:512:0x40000000:0x10000000 ;
insmod $MODDIR/mme_host.ko transport0=shm

echo "Init AVS (LOAD 5)"
echo "LD 5" > /dev/vfd
insmod $MODDIR/avs.ko type=avs_pio
#insmod $MODDIR/avs.ko type=avs_none #HDMU value

player=`cat /proc/stb/player/version | awk '{ print substr( $0, length($0) - 2, length($0) ) }'`
echo "Init player $player (LOAD 4)"
echo "LD 4" > /dev/vfd

insmod $MODDIR/mmelog.ko
insmod $MODDIR/ksound.ko
insmod $MODDIR/p2div64.ko
insmod $MODDIR/stm_v4l2.ko
if [ $player -gt 131 ]; then
   insmod $MODDIR/stmvout.ko
   insmod $MODDIR/stmvbi.ko
fi
insmod $MODDIR/pseudocard.ko

insmod $MODDIR/stv090x.ko

if [ $player -gt 131 ]; then
   if [ -e $MODDIR/pti.ko ]; then
      insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
      if [ ! $?=='2' ]; then
         pti_arg=""
         echo "Simple pti"
         insmod $MODDIR/pti.ko $pti_arg
      fi
   fi
   insmod $MODDIR/stm_monitor.ko
   insmod $MODDIR/stmsysfs.ko
   insmod $MODDIR/stmdvb.ko
#else
#   insmod $MODDIR/pti.ko
#   insmod $MODDIR/stmdvb.ko
#   insmod $MODDIR/stm_monitor.ko
fi

echo "LD 3" > /dev/vfd
echo "LOAD 3"
#insmod $MODDIR/player2.ko discardlateframe=0
insmod $MODDIR/player2.ko
insmod $MODDIR/sth264pp.ko
insmod $MODDIR/stmalloc.ko
insmod $MODDIR/platform.ko
insmod $MODDIR/silencegen.ko

insmod $MODDIR/smartcard.ko

echo "Init HDMI-CEC"
insmod $MODDIR/cec.ko activemode=1

insmod $MODDIR/bpamem.ko
mknod /dev/bpamem c 153 0 

showiframe -p /boot/bootlogo.mvi &
stfbcontrol a 0

echo "Init lircd (LOAD 2)"
echo "LD 2" > /dev/vfd
/usr/bin/lircd
rm -rf /dev/rc
mknod /dev/rc c 147 1 #VFD

echo "Init smartcard cardreader"
mknod /dev/sci0 c 169 0
mknod /dev/sci1 c 169 1

major=$(awk "\$2==\"sparkid\" {print \$1}" /proc/devices)
rm -f /dev/sparkid
mknod /dev/sparkid c $major 0

/bin/evremote2 10 100 &

stfbcontrol a 255

# Why is this done twice?
#/etc/init.d/mountall start
#/etc/init.d/hostname start
#echo -n "Starting telnetd "
#autologin=`cat /etc/enigma2/settings | grep systemoptions.autologin | cut -d "=" -f2`
#if [ ! $autologin ]; then
#   /usr/sbin/telnetd -l /bin/autologin
##   echo "with autologin"
#else
#   /usr/sbin/telnetd -l /bin/login
##    echo "with normal login"
#fi
#end twice

wlan=`cat /etc/enigma2/settings | grep systemoptions.wlan | cut -d "=" -f2`
if [ ! $wlan ] || [ ! -e $MODDIR/$wlan.ko ]; then
   echo "No WLAN"
else
   insmod $MODDIR/$wlan.ko
   echo "$wlan WLAN"
#   echo "$wlan WLAN" > /dev/vfd
#   sleep 3
fi

if [ -e $MODDIR/ntfs.ko ]; then
   insmod $MODDIR/ntfs.ko
fi

if [ -e $MODDIR/cifs.ko ]; then
   insmod $MODDIR/cifs.ko
fi

echo "LD 1" > /dev/vfd
echo "Init FTP (LOAD 1)"
/etc/init.d/vsftpd start
/usr/sbin/inetd

NFS=`grep -c nfs /proc/cmdline`
if [ "$NFS" -eq "1" ]; then 
   echo "Booting from nfs, don't set network" 
else 
   if [ -e /etc/network/interfaces ]; then 
      ip addr flush eth0
      /etc/init.d/networking stop 
      DHCP=`grep -c 'iface eth0 inet dhcp' /etc/network/interfaces`
      if [ "$DHCP" -eq "1" ]; then
         echo "Starting DHCP on eth0"
         /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start &
   fi
fi
sleep 2

# Handle SWAPPART and RECORD labels and USB devices
if [ -e /usr/sbin/amount.sh ]; then
   (sleep 20; /usr/sbin/amount.sh) &
fi

# inadyn
inadyn=`cat /etc/enigma2/settings | grep systemoptions.inadyn | cut -d "=" -f2`
if [ ! $inadyn ]; then
   echo "No inadyn"
else
   if [ -e /usr/bin/inadyn ]; then
      /usr/bin/inadyn &
#   else
#      echo "INADYN MISSING" > /dev/vfd
#      sleep 2
   fi
fi

# OpenSSh daemon
openssh=`cat /etc/enigma2/settings | grep systemoptions.openssh | cut -d "=" -f2`
if [ ! $openssh ]; then
   echo "No OpenSSH"
else
   if [ -e /etc/init.d/sshd ]; then
      (sleep 30; /etc/init.d/sshd start) &
#   else
#      echo "SSHD MISSING" > /dev/vfd
#      sleep 2
   fi
fi

# Enable PKT plugins
if [ ! -e /tmp/reference.dat ] && [ -e /var/bin/reference.dat ]; then
  cp /var/bin/reference.dat /tmp
fi

# Start automount
if [ -e /etc/init.d/automount ]; then
   python /etc/init.d/automount &
fi

# Do own extras
if [ -e /etc/ownscript.sh ]; then
   /etc/ownscript.sh &
fi

# Try and synchronise time
inettime=`cat /etc/enigma2/settings | grep systemoptions.inettime | cut -d "=" -f2`
if [ ! $inettime ] && [ -e /sbin/ntpdate ]; then
   echo "Set internet time"
#   (/sbin/ntpdate pl.pool.ntp.org; /bin/fp_control -s `date +"%H:%M:%S %d-%m-%Y"`) &
   (/sbin/ntpdate ntp.nasa.gov; /bin/fp_control -s `date +"%H:%M:%S %d-%m-%Y"`) &
else
   if [ -e /usr/sbin/time.sh ]; then
      echo "Use transponder time"
      /usr/sbin/time.sh &
   fi
fi

echo "Start Enigma2"
echo "Start Enigma2" > /dev/vfd

until false
do
   echo "Entering e2 main loop"
#   if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
#      showiframe -p /usr/local/share/enigma2/backdrop.mvi
#   fi
   /usr/local/bin/enigma2
   rtv=$?
   echo "e2 ended <- RTV:" $rtv
#   /bin/fp_control -i 46 0
   case "$rtv" in
      0)  echo "0"
          echo "E2 ERROR" > /dev/vfd
          init 6;;
      1)  echo "1"
          echo "SHUTDOWN" > /dev/vfd
          if [ -e /usr/local/share/enigma2/shutdown.mvi ]; then
             showiframe -p /usr/local/share/enigma2/shutdown.mvi
          fi
          init 0;;
      2)  echo "2"
          echo "REBOOT" > /dev/vfd
          init 6;;
      3)  echo "3"
          echo "RESTART GUI" > /dev/vfd
          echo "0" > /proc/progress
#          if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
#             showiframe -p /usr/local/share/enigma2/backdrop.mvi
#          else
             showiframe -p /boot/bootlogo.mvi &;;
#          fi
      10) echo "SPARK RESTART"
          echo "SPARK RESTART" > /dev/vfd
          insmod $MODDIR/i2s.ko
          if [ ! -f /etc/fw_env.config ]; then
             echo "fw_env.config not found - will create it"
             echo '/dev/mtd7 0x000A0000 0x00020000 0x20000' > /etc/fw_env.config
          fi
          var=`fw_printenv | grep 'bootargs_spark='` ; fw_setenv bootargs ${var#*=}
          var=`fw_printenv | grep 'bootcmd_spark='` ; fw_setenv bootcmd ${var#*=}
          var=`fw_printenv | grep 'boot_system_spark='` ; fw_setenv boot_system ${var#*=}
          var=`fw_printenv | grep 'userfs_base_spark='` ; fw_setenv userfs_base ${var#*=}
          var=`fw_printenv | grep 'userfs_len_spark='` ; fw_setenv userfs_len ${var#*=}
          var=`fw_printenv | grep 'kernel_base_spark='` ; fw_setenv kernel_base ${var#*=}
          var=`fw_printenv | grep 'kernel_name_spark='` ; fw_setenv kernel_name ${var#*=}
          var=`fw_printenv | grep 'userfs_name_spark='` ; fw_setenv userfs_name ${var#*=} 
          var=`fw_printenv | grep 'loadu_userfs_spark='` ; fw_setenv loadu_userfs ${var#*=}
          var=`fw_printenv | grep 'loadu_kernel_spark='` ; fw_setenv loadu_kernel ${var#*=}
          var=`fw_printenv | grep 'kernel_len_spark='` ; fw_setenv kernel_len ${var#*=}
          sync
          init 6;;
      *)  echo "ERROR"
          echo "ERROR" > /dev/vfd
          init 6;;
   esac
done 

#never reached
echo "REBOOT SPARK" > /dev/vfd
echo "REBOOT SPARK"
reboot -f
